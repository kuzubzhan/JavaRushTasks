<div class="wdghtml" taskKey="com.javarush.task.task29.task2909.big01">
<h3>Рефакторинг (1)</h3>
<p>Пришло время немного порефакторить.<br />
<strong>Википедия говорит:</strong> &#171;<em><strong>Рефакторинг</strong> (англ. refactoring) или реорганизация кода &#8212; процесс изменения внутренней структуры программы, не затрагивающий её внешнего поведения и имеющий целью облегчить понимание её работы. В основе рефакторинга лежит последовательность небольших эквивалентных (то есть сохраняющих поведение) преобразований. Поскольку каждое преобразование маленькое, программисту легче проследить за его правильностью, и в то же время вся последовательность может привести к существенной перестройке программы и улучшению её согласованности и четкости.&#187; Такими маленькими преобразованиями мы и будем заниматься. После каждого изменения следи за сохранностью работоспособности кода. Многие методы рефакторинга не однократно применены и проверены сообществом программистов. Получили свои названия. Каждое задание будет сопровождено названием рефакторинга. Ты всегда можешь прочитать более подробно о нем в книге Мартина Фаулера &#171;<strong>Рефакторинг: Улучшение существующего кода</strong></em>&#171;.</p>
<p>Начнем. Внимательно ознакомься с кодом пакета <strong><span class="text-red">human</span></strong> (человек).</p>
<p><strong>Задания:</strong><br />
1.1. Подъем поля. Подними поле <mark class="user">children</mark> в базовый класс.<br />
1.2. Подъем метода. Подними <strong>сеттер</strong> и <strong>геттер</strong> для <mark class="user">children</mark> в базовый класс.<br />
1.3. Инкапсуляция коллекции.<br />
1.3.1. Метод <mark>getChildren</mark> должен возвращать не модифицируемое представление списка <mark class="user">children</mark>.<br />
1.3.2. Убери сеттер для <mark class="user">children</mark>.<br />
1.3.3. Добавь методы <mark>addChild(<strong>Human</strong>)</mark> и <mark>removeChild(<strong>Human</strong>)</mark>. Реализуй их логику.</p>

</div>
